# Generated by Django 4.2.7 on 2025-07-16 21:58

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Merchant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_name', models.CharField(max_length=200)),
                ('legal_name', models.CharField(blank=True, max_length=200, null=True)),
                ('business_registration_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('tax_id', models.CharField(blank=True, max_length=50, null=True)),
                ('website_url', models.URLField(blank=True, null=True)),
                ('support_email', models.EmailField(max_length=254)),
                ('support_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=2)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('ACTIVE', 'Active'), ('SUSPENDED', 'Suspended'), ('INACTIVE', 'Inactive'), ('TERMINATED', 'Terminated')], default='PENDING', max_length=20)),
                ('verification_level', models.CharField(choices=[('NONE', 'No Verification'), ('BASIC', 'Basic Verification'), ('ENHANCED', 'Enhanced Verification'), ('PREMIUM', 'Premium Verification')], default='NONE', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('monthly_volume_limit', models.DecimalField(decimal_places=2, default=10000, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('transaction_limit', models.DecimalField(decimal_places=2, default=1000, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'merchant_merchant',
            },
        ),
        migrations.CreateModel(
            name='MerchantCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk')], default='MEDIUM', max_length=20)),
                ('requires_verification', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Merchant Category',
                'verbose_name_plural': 'Merchant Categories',
                'db_table': 'merchant_category',
            },
        ),
        migrations.CreateModel(
            name='MerchantGateway',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('gateway_type', models.CharField(choices=[('CUSTODIAL', 'Custodial Gateway'), ('NON_CUSTODIAL', 'Non-Custodial Gateway'), ('HYBRID', 'Hybrid Gateway')], max_length=20)),
                ('wallet_address', models.CharField(max_length=42, unique=True)),
                ('encrypted_private_key', models.TextField(blank=True, null=True)),
                ('auto_settlement', models.BooleanField(default=True)),
                ('settlement_threshold', models.DecimalField(decimal_places=18, default=100, max_digits=40, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('callback_url', models.URLField(blank=True, null=True)),
                ('webhook_secret', models.CharField(blank=True, max_length=64, null=True)),
                ('transaction_fee_percentage', models.DecimalField(decimal_places=4, default=Decimal('0.5'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('flat_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('MAINTENANCE', 'Maintenance'), ('SUSPENDED', 'Suspended')], default='ACTIVE', max_length=20)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gateways', to='merchant.merchant')),
            ],
            options={
                'db_table': 'merchant_gateway',
            },
        ),
        migrations.CreateModel(
            name='MerchantProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('sku', models.CharField(blank=True, max_length=100, null=True)),
                ('price_usd', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('price_mtt', models.DecimalField(blank=True, decimal_places=18, max_digits=40, null=True, validators=[django.core.validators.MinValueValidator(Decimal('1E-18'))])),
                ('stock_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('track_inventory', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('tags', models.TextField(blank=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='merchant.merchant')),
            ],
            options={
                'db_table': 'merchant_product',
            },
        ),
        migrations.CreateModel(
            name='MerchantApiKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('api_key', models.CharField(max_length=64, unique=True)),
                ('api_secret', models.CharField(max_length=128)),
                ('environment', models.CharField(choices=[('SANDBOX', 'Sandbox'), ('PRODUCTION', 'Production')], max_length=20)),
                ('can_read', models.BooleanField(default=True)),
                ('can_write', models.BooleanField(default=False)),
                ('can_refund', models.BooleanField(default=False)),
                ('rate_limit_per_minute', models.PositiveIntegerField(default=60)),
                ('rate_limit_per_hour', models.PositiveIntegerField(default=3600)),
                ('is_active', models.BooleanField(default=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to='merchant.merchant')),
            ],
            options={
                'db_table': 'merchant_api_key',
            },
        ),
        migrations.AddField(
            model_name='merchant',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='merchant.merchantcategory'),
        ),
        migrations.AddField(
            model_name='merchant',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='merchant_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='merchant',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_merchants', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MerchantTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('PAYMENT', 'Payment'), ('REFUND', 'Refund'), ('SETTLEMENT', 'Settlement'), ('FEE', 'Fee')], max_length=20)),
                ('amount_usd', models.DecimalField(decimal_places=2, max_digits=15)),
                ('amount_mtt', models.DecimalField(decimal_places=18, max_digits=40)),
                ('fee_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('transaction_hash', models.CharField(blank=True, max_length=66, null=True)),
                ('from_address', models.CharField(blank=True, max_length=42, null=True)),
                ('to_address', models.CharField(blank=True, max_length=42, null=True)),
                ('customer_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('customer_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('reference_id', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('gateway', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='merchant.merchantgateway')),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='merchant.merchant')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='merchant.merchantproduct')),
            ],
            options={
                'db_table': 'merchant_transaction',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['merchant', 'created_at'], name='merchant_tr_merchan_80e764_idx'), models.Index(fields=['status', 'created_at'], name='merchant_tr_status_9f04b2_idx'), models.Index(fields=['transaction_hash'], name='merchant_tr_transac_27490c_idx'), models.Index(fields=['reference_id'], name='merchant_tr_referen_4a9d24_idx'), models.Index(fields=['customer_email'], name='merchant_tr_custome_5786dd_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='merchantproduct',
            index=models.Index(fields=['merchant', 'is_active'], name='merchant_pr_merchan_4bef80_idx'),
        ),
        migrations.AddIndex(
            model_name='merchantproduct',
            index=models.Index(fields=['category'], name='merchant_pr_categor_9f4fe5_idx'),
        ),
        migrations.AddIndex(
            model_name='merchantproduct',
            index=models.Index(fields=['is_featured'], name='merchant_pr_is_feat_974278_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='merchantproduct',
            unique_together={('merchant', 'sku')},
        ),
        migrations.AddIndex(
            model_name='merchantgateway',
            index=models.Index(fields=['merchant', 'status'], name='merchant_ga_merchan_d1b191_idx'),
        ),
        migrations.AddIndex(
            model_name='merchantgateway',
            index=models.Index(fields=['wallet_address'], name='merchant_ga_wallet__952e1c_idx'),
        ),
        migrations.AddIndex(
            model_name='merchantgateway',
            index=models.Index(fields=['is_primary'], name='merchant_ga_is_prim_20fc31_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='merchantgateway',
            unique_together={('merchant', 'name')},
        ),
        migrations.AddIndex(
            model_name='merchantapikey',
            index=models.Index(fields=['api_key'], name='merchant_ap_api_key_978c98_idx'),
        ),
        migrations.AddIndex(
            model_name='merchantapikey',
            index=models.Index(fields=['merchant', 'is_active'], name='merchant_ap_merchan_a046a2_idx'),
        ),
        migrations.AddIndex(
            model_name='merchantapikey',
            index=models.Index(fields=['environment'], name='merchant_ap_environ_62585a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='merchantapikey',
            unique_together={('merchant', 'name', 'environment')},
        ),
        migrations.AddIndex(
            model_name='merchant',
            index=models.Index(fields=['status'], name='merchant_me_status_56cf25_idx'),
        ),
        migrations.AddIndex(
            model_name='merchant',
            index=models.Index(fields=['category'], name='merchant_me_categor_7a75fb_idx'),
        ),
        migrations.AddIndex(
            model_name='merchant',
            index=models.Index(fields=['is_verified'], name='merchant_me_is_veri_b95b3c_idx'),
        ),
        migrations.AddIndex(
            model_name='merchant',
            index=models.Index(fields=['business_name'], name='merchant_me_busines_3df744_idx'),
        ),
    ]
