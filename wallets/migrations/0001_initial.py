# Generated by Django 4.2.7 on 2025-07-16 21:58

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WalletType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('CUSTODIAL', 'Custodial'), ('NON_CUSTODIAL', 'Non-Custodial'), ('HYBRID', 'Hybrid'), ('SMART_CONTRACT', 'Smart Contract')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('supports_mtt', models.BooleanField(default=True)),
                ('requires_kyc', models.BooleanField(default=False)),
                ('min_balance', models.DecimalField(decimal_places=18, default=0, max_digits=40, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('max_balance', models.DecimalField(blank=True, decimal_places=18, max_digits=40, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Wallet Type',
                'verbose_name_plural': 'Wallet Types',
                'db_table': 'wallets_type',
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=42, unique=True)),
                ('private_key_encrypted', models.TextField(blank=True, null=True)),
                ('public_key', models.CharField(blank=True, max_length=132, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended'), ('LOCKED', 'Locked'), ('CLOSED', 'Closed')], default='ACTIVE', max_length=20)),
                ('is_primary', models.BooleanField(default=False)),
                ('is_merchant', models.BooleanField(default=False)),
                ('is_gateway', models.BooleanField(default=False)),
                ('backup_phrase_encrypted', models.TextField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallets', to=settings.AUTH_USER_MODEL)),
                ('wallet_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wallets.wallettype')),
            ],
            options={
                'db_table': 'wallets_wallet',
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_hash', models.CharField(max_length=66, unique=True)),
                ('from_address', models.CharField(max_length=42)),
                ('to_address', models.CharField(max_length=42)),
                ('amount', models.DecimalField(decimal_places=18, max_digits=40, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('fee', models.DecimalField(decimal_places=18, default=0, max_digits=40, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('gas_limit', models.PositiveBigIntegerField(blank=True, null=True)),
                ('gas_used', models.PositiveBigIntegerField(blank=True, null=True)),
                ('gas_price', models.PositiveBigIntegerField(blank=True, null=True)),
                ('nonce', models.PositiveBigIntegerField(blank=True, null=True)),
                ('block_number', models.PositiveBigIntegerField(blank=True, null=True)),
                ('block_hash', models.CharField(blank=True, max_length=66, null=True)),
                ('transaction_type', models.CharField(choices=[('SEND', 'Send'), ('RECEIVE', 'Receive'), ('INTERNAL', 'Internal Transfer'), ('CONTRACT', 'Contract Interaction'), ('FEE', 'Fee Payment')], max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('FAILED', 'Failed'), ('DROPPED', 'Dropped')], default='PENDING', max_length=20)),
                ('confirmations', models.PositiveIntegerField(default=0)),
                ('raw_transaction', models.TextField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='wallets.wallet')),
            ],
            options={
                'db_table': 'wallets_transaction',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['wallet', 'created_at'], name='wallets_tra_wallet__3b7555_idx'), models.Index(fields=['transaction_hash'], name='wallets_tra_transac_e0f8cc_idx'), models.Index(fields=['status', 'created_at'], name='wallets_tra_status_868f18_idx'), models.Index(fields=['from_address'], name='wallets_tra_from_ad_23edb5_idx'), models.Index(fields=['to_address'], name='wallets_tra_to_addr_4c5f99_idx'), models.Index(fields=['block_number'], name='wallets_tra_block_n_e2a493_idx')],
            },
        ),
        migrations.CreateModel(
            name='WalletPermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('permission_type', models.CharField(choices=[('READ', 'Read Only'), ('SEND', 'Send Transactions'), ('MANAGE', 'Full Management'), ('ADMIN', 'Administrative Access')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('granted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='wallets.wallet')),
            ],
            options={
                'db_table': 'wallets_permission',
                'indexes': [models.Index(fields=['wallet', 'user'], name='wallets_per_wallet__c60809_idx'), models.Index(fields=['user', 'permission_type'], name='wallets_per_user_id_47443d_idx'), models.Index(fields=['is_active'], name='wallets_per_is_acti_917bb5_idx')],
                'unique_together': {('wallet', 'user', 'permission_type')},
            },
        ),
        migrations.CreateModel(
            name='WalletBackup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('backup_type', models.CharField(choices=[('SEED_PHRASE', 'Seed Phrase'), ('PRIVATE_KEY', 'Private Key'), ('KEYSTORE', 'Keystore File'), ('HARDWARE', 'Hardware Wallet')], max_length=20)),
                ('encrypted_data', models.TextField()),
                ('checksum', models.CharField(max_length=64)),
                ('is_verified', models.BooleanField(default=False)),
                ('last_verified', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backups', to='wallets.wallet')),
            ],
            options={
                'db_table': 'wallets_backup',
                'indexes': [models.Index(fields=['wallet', 'backup_type'], name='wallets_bac_wallet__0c44e3_idx'), models.Index(fields=['is_verified'], name='wallets_bac_is_veri_210aaf_idx')],
                'unique_together': {('wallet', 'backup_type')},
            },
        ),
        migrations.CreateModel(
            name='WalletAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address', models.CharField(max_length=42, unique=True)),
                ('label', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_change_address', models.BooleanField(default=False)),
                ('derivation_path', models.CharField(blank=True, max_length=100, null=True)),
                ('address_index', models.PositiveIntegerField(blank=True, null=True)),
                ('used_count', models.PositiveIntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='wallets.wallet')),
            ],
            options={
                'db_table': 'wallets_address',
                'indexes': [models.Index(fields=['wallet', 'is_active'], name='wallets_add_wallet__48a154_idx'), models.Index(fields=['address'], name='wallets_add_address_3d6fbe_idx'), models.Index(fields=['is_change_address'], name='wallets_add_is_chan_7d02d6_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['user', 'is_primary'], name='wallets_wal_user_id_e48106_idx'),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['address'], name='wallets_wal_address_a083d1_idx'),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['status'], name='wallets_wal_status_ebf5d9_idx'),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['is_merchant'], name='wallets_wal_is_merc_69bbc0_idx'),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['is_gateway'], name='wallets_wal_is_gate_45d831_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='wallet',
            unique_together={('user', 'name')},
        ),
    ]
