# Generated by Django 4.2.7 on 2025-07-16 21:58

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tokens', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LiquidityPool',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('pool_address', models.CharField(max_length=42, unique=True)),
                ('base_reserve', models.DecimalField(decimal_places=18, default=0, max_digits=40)),
                ('quote_reserve', models.DecimalField(decimal_places=18, default=0, max_digits=40)),
                ('total_liquidity', models.DecimalField(decimal_places=18, default=0, max_digits=40)),
                ('fee_rate', models.DecimalField(decimal_places=4, default=Decimal('0.3'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('is_active', models.BooleanField(default=True)),
                ('volume_24h', models.DecimalField(decimal_places=18, default=0, max_digits=40)),
                ('fees_earned_24h', models.DecimalField(decimal_places=18, default=0, max_digits=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'maythetoken_liquidity_pool',
            },
        ),
        migrations.CreateModel(
            name='RoutingEngine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('strategy', models.CharField(choices=[('DIRECT', 'Direct Transfer'), ('MULTI_HOP', 'Multi-hop Routing'), ('LIQUIDITY_BASED', 'Liquidity-based Routing'), ('COST_OPTIMIZED', 'Cost Optimized'), ('SPEED_OPTIMIZED', 'Speed Optimized')], max_length=20)),
                ('max_hops', models.PositiveSmallIntegerField(default=3)),
                ('max_routing_time_seconds', models.PositiveIntegerField(default=30)),
                ('min_liquidity_threshold', models.DecimalField(decimal_places=18, default=1000, max_digits=40, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('base_routing_fee', models.DecimalField(decimal_places=4, default=Decimal('0.05'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('hop_fee_multiplier', models.DecimalField(decimal_places=2, default=Decimal('1.5'), max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('1'))])),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('MAINTENANCE', 'Maintenance')], default='ACTIVE', max_length=20)),
                ('is_default', models.BooleanField(default=False)),
                ('priority', models.PositiveSmallIntegerField(default=100)),
                ('success_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('average_routing_time', models.DurationField(blank=True, null=True)),
                ('total_volume_routed', models.DecimalField(decimal_places=18, default=0, max_digits=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'maythetoken_routing_engine',
                'ordering': ['priority', '-success_rate'],
            },
        ),
        migrations.CreateModel(
            name='TradingPair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_currency', models.CharField(max_length=10)),
                ('quote_currency', models.CharField(max_length=10)),
                ('symbol', models.CharField(max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('min_order_size', models.DecimalField(decimal_places=18, default=1, max_digits=40, validators=[django.core.validators.MinValueValidator(Decimal('1E-18'))])),
                ('max_order_size', models.DecimalField(blank=True, decimal_places=18, max_digits=40, null=True, validators=[django.core.validators.MinValueValidator(Decimal('1E-18'))])),
                ('maker_fee', models.DecimalField(decimal_places=4, default=Decimal('0.1'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('taker_fee', models.DecimalField(decimal_places=4, default=Decimal('0.2'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'maythetoken_trading_pair',
                'unique_together': {('base_currency', 'quote_currency')},
            },
        ),
        migrations.CreateModel(
            name='TradeOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_type', models.CharField(choices=[('MARKET', 'Market Order'), ('LIMIT', 'Limit Order'), ('STOP', 'Stop Order'), ('STOP_LIMIT', 'Stop Limit Order')], max_length=20)),
                ('side', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=10)),
                ('quantity', models.DecimalField(decimal_places=18, max_digits=40, validators=[django.core.validators.MinValueValidator(Decimal('1E-18'))])),
                ('price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('stop_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('filled_quantity', models.DecimalField(decimal_places=18, default=0, max_digits=40)),
                ('remaining_quantity', models.DecimalField(decimal_places=18, default=0, max_digits=40)),
                ('average_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('total_value', models.DecimalField(decimal_places=8, default=0, max_digits=40)),
                ('commission', models.DecimalField(decimal_places=18, default=0, max_digits=40)),
                ('commission_asset', models.CharField(default='MTT', max_length=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('OPEN', 'Open'), ('PARTIALLY_FILLED', 'Partially Filled'), ('FILLED', 'Filled'), ('CANCELLED', 'Cancelled'), ('REJECTED', 'Rejected'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('time_in_force', models.CharField(choices=[('GTC', 'Good Till Cancelled'), ('IOC', 'Immediate or Cancel'), ('FOK', 'Fill or Kill')], default='GTC', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('trading_pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maythetoken.tradingpair')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'maythetoken_trade_order',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TradeExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=18, max_digits=40, validators=[django.core.validators.MinValueValidator(Decimal('1E-18'))])),
                ('price', models.DecimalField(decimal_places=8, max_digits=20)),
                ('total_value', models.DecimalField(decimal_places=8, max_digits=40)),
                ('buyer_fee', models.DecimalField(decimal_places=18, default=0, max_digits=40)),
                ('seller_fee', models.DecimalField(decimal_places=18, default=0, max_digits=40)),
                ('executed_at', models.DateTimeField(auto_now_add=True)),
                ('buy_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buy_executions', to='maythetoken.tradeorder')),
                ('sell_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sell_executions', to='maythetoken.tradeorder')),
                ('trading_pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maythetoken.tradingpair')),
            ],
            options={
                'db_table': 'maythetoken_trade_execution',
                'ordering': ['-executed_at'],
            },
        ),
        migrations.CreateModel(
            name='TokenIssuance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('issuance_type', models.CharField(choices=[('INITIAL', 'Initial Issuance'), ('REWARD', 'Reward Issuance'), ('BONUS', 'Bonus Issuance'), ('BURN', 'Token Burn'), ('MINT', 'Additional Mint')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=18, max_digits=40, validators=[django.core.validators.MinValueValidator(Decimal('1E-18'))])),
                ('recipient_address', models.CharField(blank=True, max_length=42, null=True)),
                ('transaction_hash', models.CharField(blank=True, max_length=66, null=True, unique=True)),
                ('block_number', models.PositiveBigIntegerField(blank=True, null=True)),
                ('gas_used', models.PositiveBigIntegerField(blank=True, null=True)),
                ('authorization_signature', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('authorized_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorized_issuances', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuances', to='tokens.token')),
            ],
            options={
                'db_table': 'maythetoken_issuance',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RoutingPath',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('from_address', models.CharField(max_length=42)),
                ('to_address', models.CharField(max_length=42)),
                ('intermediate_addresses', models.JSONField(default=list)),
                ('path_length', models.PositiveSmallIntegerField()),
                ('estimated_cost', models.DecimalField(decimal_places=18, max_digits=40)),
                ('estimated_time_seconds', models.PositiveIntegerField()),
                ('liquidity_score', models.PositiveSmallIntegerField(default=0)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('success_count', models.PositiveIntegerField(default=0)),
                ('failure_count', models.PositiveIntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('routing_engine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routing_paths', to='maythetoken.routingengine')),
            ],
            options={
                'db_table': 'maythetoken_routing_path',
            },
        ),
        migrations.AddIndex(
            model_name='routingengine',
            index=models.Index(fields=['status', 'priority'], name='maythetoken_status_345299_idx'),
        ),
        migrations.AddIndex(
            model_name='routingengine',
            index=models.Index(fields=['is_default'], name='maythetoken_is_defa_6514fa_idx'),
        ),
        migrations.AddIndex(
            model_name='routingengine',
            index=models.Index(fields=['strategy'], name='maythetoken_strateg_710860_idx'),
        ),
        migrations.AddField(
            model_name='liquiditypool',
            name='trading_pair',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liquidity_pools', to='maythetoken.tradingpair'),
        ),
        migrations.AddIndex(
            model_name='tradeorder',
            index=models.Index(fields=['user', 'status'], name='maythetoken_user_id_c9dcd4_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeorder',
            index=models.Index(fields=['trading_pair', 'side', 'price'], name='maythetoken_trading_59dc0d_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeorder',
            index=models.Index(fields=['status', 'created_at'], name='maythetoken_status_582e55_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeexecution',
            index=models.Index(fields=['trading_pair', 'executed_at'], name='maythetoken_trading_a32976_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeexecution',
            index=models.Index(fields=['buy_order'], name='maythetoken_buy_ord_e1ffcc_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeexecution',
            index=models.Index(fields=['sell_order'], name='maythetoken_sell_or_040225_idx'),
        ),
        migrations.AddIndex(
            model_name='tokenissuance',
            index=models.Index(fields=['token', 'issuance_type'], name='maythetoken_token_i_2afc01_idx'),
        ),
        migrations.AddIndex(
            model_name='tokenissuance',
            index=models.Index(fields=['status', 'created_at'], name='maythetoken_status_a16f3f_idx'),
        ),
        migrations.AddIndex(
            model_name='tokenissuance',
            index=models.Index(fields=['recipient'], name='maythetoken_recipie_e7446a_idx'),
        ),
        migrations.AddIndex(
            model_name='tokenissuance',
            index=models.Index(fields=['authorized_by'], name='maythetoken_authori_b097ea_idx'),
        ),
        migrations.AddIndex(
            model_name='routingpath',
            index=models.Index(fields=['routing_engine', 'is_active'], name='maythetoken_routing_5feedf_idx'),
        ),
        migrations.AddIndex(
            model_name='routingpath',
            index=models.Index(fields=['from_address', 'to_address'], name='maythetoken_from_ad_3b97fa_idx'),
        ),
        migrations.AddIndex(
            model_name='routingpath',
            index=models.Index(fields=['liquidity_score'], name='maythetoken_liquidi_2971ce_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='routingpath',
            unique_together={('routing_engine', 'from_address', 'to_address')},
        ),
        migrations.AddIndex(
            model_name='liquiditypool',
            index=models.Index(fields=['trading_pair', 'is_active'], name='maythetoken_trading_8b0e12_idx'),
        ),
        migrations.AddIndex(
            model_name='liquiditypool',
            index=models.Index(fields=['pool_address'], name='maythetoken_pool_ad_a5a587_idx'),
        ),
        migrations.AddIndex(
            model_name='liquiditypool',
            index=models.Index(fields=['total_liquidity'], name='maythetoken_total_l_653c63_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='liquiditypool',
            unique_together={('trading_pair', 'name')},
        ),
    ]
