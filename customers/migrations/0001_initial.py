# Generated by Django 4.2.7 on 2025-07-16 21:58

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='customer_avatars/')),
                ('address_line1', models.CharField(blank=True, max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, max_length=2)),
                ('verification_level', models.CharField(choices=[('NONE', 'No Verification'), ('EMAIL', 'Email Verified'), ('PHONE', 'Phone Verified'), ('IDENTITY', 'Identity Verified'), ('FULL', 'Full KYC')], default='NONE', max_length=20)),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('identity_verified', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended'), ('BANNED', 'Banned')], default='ACTIVE', max_length=20)),
                ('is_premium', models.BooleanField(default=False)),
                ('preferred_currency', models.CharField(default='USD', max_length=3)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('marketing_emails', models.BooleanField(default=True)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('failed_login_attempts', models.PositiveIntegerField(default=0)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('referral_code', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to='customers.customerprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customers_profile',
            },
        ),
        migrations.CreateModel(
            name='CustomerNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('TRANSACTION', 'Transaction Alert'), ('SECURITY', 'Security Alert'), ('SYSTEM', 'System Notification'), ('MARKETING', 'Marketing'), ('SUPPORT', 'Support Update'), ('KYC', 'KYC Update')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('channel', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('IN_APP', 'In-App Notification')], max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('READ', 'Read'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_urgent', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('action_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='customers.customerprofile')),
            ],
            options={
                'db_table': 'customers_notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerKYC',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('PASSPORT', 'Passport'), ('DRIVERS_LICENSE', "Driver's License"), ('NATIONAL_ID', 'National ID'), ('UTILITY_BILL', 'Utility Bill'), ('BANK_STATEMENT', 'Bank Statement')], max_length=20)),
                ('document_number', models.CharField(blank=True, max_length=100, null=True)),
                ('document_file', models.FileField(blank=True, null=True, upload_to='kyc_documents/')),
                ('document_front', models.ImageField(blank=True, null=True, upload_to='kyc_documents/front/')),
                ('document_back', models.ImageField(blank=True, null=True, upload_to='kyc_documents/back/')),
                ('selfie_photo', models.ImageField(blank=True, null=True, upload_to='kyc_documents/selfies/')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Review'), ('UNDER_REVIEW', 'Under Review'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('review_notes', models.TextField(blank=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('issued_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('issuing_country', models.CharField(blank=True, max_length=2, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kyc_documents', to='customers.customerprofile')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_kyc_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customers_kyc',
            },
        ),
        migrations.CreateModel(
            name='CustomerActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('PURCHASE', 'Purchase'), ('PAYMENT', 'Payment'), ('TRANSFER', 'Transfer'), ('WALLET_CREATE', 'Wallet Created'), ('KYC_SUBMIT', 'KYC Submitted'), ('PROFILE_UPDATE', 'Profile Updated'), ('PASSWORD_CHANGE', 'Password Changed'), ('API_ACCESS', 'API Access')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('location', models.JSONField(blank=True, default=dict)),
                ('amount', models.DecimalField(blank=True, decimal_places=18, max_digits=40, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('currency', models.CharField(blank=True, max_length=10, null=True)),
                ('transaction_id', models.UUIDField(blank=True, null=True)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('risk_score', models.PositiveSmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='customers.customerprofile')),
            ],
            options={
                'db_table': 'customers_activity',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerSupport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticket_number', models.CharField(max_length=20, unique=True)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('TECHNICAL', 'Technical Issue'), ('PAYMENT', 'Payment Issue'), ('ACCOUNT', 'Account Issue'), ('KYC', 'KYC/Verification'), ('SECURITY', 'Security Concern'), ('GENERAL', 'General Inquiry'), ('COMPLAINT', 'Complaint')], max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=20)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('IN_PROGRESS', 'In Progress'), ('WAITING_CUSTOMER', 'Waiting for Customer'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed')], default='OPEN', max_length=20)),
                ('resolution', models.TextField(blank=True)),
                ('resolution_time', models.DurationField(blank=True, null=True)),
                ('customer_rating', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('customer_feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to='customers.customerprofile')),
            ],
            options={
                'db_table': 'customers_support',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['customer', 'status'], name='customers_s_custome_f414f2_idx'), models.Index(fields=['status', 'priority'], name='customers_s_status_fb20d6_idx'), models.Index(fields=['category'], name='customers_s_categor_326e03_idx'), models.Index(fields=['assigned_to'], name='customers_s_assigne_61a4fc_idx'), models.Index(fields=['ticket_number'], name='customers_s_ticket__ff68ab_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='customerprofile',
            index=models.Index(fields=['user'], name='customers_p_user_id_b54751_idx'),
        ),
        migrations.AddIndex(
            model_name='customerprofile',
            index=models.Index(fields=['verification_level'], name='customers_p_verific_87a436_idx'),
        ),
        migrations.AddIndex(
            model_name='customerprofile',
            index=models.Index(fields=['status'], name='customers_p_status_f90dcd_idx'),
        ),
        migrations.AddIndex(
            model_name='customerprofile',
            index=models.Index(fields=['referral_code'], name='customers_p_referra_cd36e7_idx'),
        ),
        migrations.AddIndex(
            model_name='customerprofile',
            index=models.Index(fields=['country'], name='customers_p_country_1ae53e_idx'),
        ),
        migrations.AddIndex(
            model_name='customernotification',
            index=models.Index(fields=['customer', 'status'], name='customers_n_custome_9ea7f2_idx'),
        ),
        migrations.AddIndex(
            model_name='customernotification',
            index=models.Index(fields=['notification_type'], name='customers_n_notific_afffd5_idx'),
        ),
        migrations.AddIndex(
            model_name='customernotification',
            index=models.Index(fields=['channel'], name='customers_n_channel_cd258c_idx'),
        ),
        migrations.AddIndex(
            model_name='customernotification',
            index=models.Index(fields=['is_urgent'], name='customers_n_is_urge_799dc4_idx'),
        ),
        migrations.AddIndex(
            model_name='customernotification',
            index=models.Index(fields=['created_at'], name='customers_n_created_eb581a_idx'),
        ),
        migrations.AddIndex(
            model_name='customerkyc',
            index=models.Index(fields=['customer', 'status'], name='customers_k_custome_6375ec_idx'),
        ),
        migrations.AddIndex(
            model_name='customerkyc',
            index=models.Index(fields=['status', 'created_at'], name='customers_k_status_af352f_idx'),
        ),
        migrations.AddIndex(
            model_name='customerkyc',
            index=models.Index(fields=['document_type'], name='customers_k_documen_ca17c3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customerkyc',
            unique_together={('customer', 'document_type')},
        ),
        migrations.AddIndex(
            model_name='customeractivity',
            index=models.Index(fields=['customer', 'created_at'], name='customers_a_custome_d262de_idx'),
        ),
        migrations.AddIndex(
            model_name='customeractivity',
            index=models.Index(fields=['activity_type', 'created_at'], name='customers_a_activit_d05856_idx'),
        ),
        migrations.AddIndex(
            model_name='customeractivity',
            index=models.Index(fields=['ip_address'], name='customers_a_ip_addr_9b067b_idx'),
        ),
        migrations.AddIndex(
            model_name='customeractivity',
            index=models.Index(fields=['is_suspicious'], name='customers_a_is_susp_f23f35_idx'),
        ),
        migrations.AddIndex(
            model_name='customeractivity',
            index=models.Index(fields=['risk_score'], name='customers_a_risk_sc_8242fd_idx'),
        ),
    ]
